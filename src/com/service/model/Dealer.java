package com.service.model;
// Generated Mar 30, 2018 2:37:38 PM by Hibernate Tools 5.2.8.Final

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.service.DAO.DealerDAO;
import com.service.DAO.InventoryDAO;
import com.service.Interfaces.ManageInventory;
import com.service.Interfaces.UserManagementServices;

/**
 * Dealer generated by hbm2java
 */
@Entity
@Table(name = "dealer", catalog = "ITMD_515", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class Dealer implements java.io.Serializable,UserManagementServices,ManageInventory {
	DealerDAO dealdao = new DealerDAO();

	private String did;
	private String adminId;
	private String name;
	private String phone;
	private String email;
	private String address;
	private String city;
	private String zip;
	private String state;
	private String country;
	private String username;
	private String password;

	public Dealer() {
	}

	public Dealer(String did, String adminId, String username, String password) {
		this.did = did;
		this.adminId = adminId;
		this.username = username;
		this.password = password;
	}

	public Dealer(String did, String adminId, String name, String phone, String email, String address, String city,
			String zip, String state, String country, String username, String password) {
		this.did = did;
		this.adminId = adminId;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.city = city;
		this.zip = zip;
		this.state = state;
		this.country = country;
		this.username = username;
		this.password = password;
	}

	@Id

	@Column(name = "DID", unique = true, nullable = false, length = 45)
	public String getDid() {
		return this.did;
	}

	public void setDid(String did) {
		this.did = did;
	}

	@Column(name = "admin_id", nullable = false, length = 45)
	public String getAdminId() {
		return this.adminId;
	}

	public void setAdminId(String adminId) {
		this.adminId = adminId;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "phone", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "zip", length = 45)
	public String getZip() {
		return this.zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "country", length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Override
	public String registration(Object user) {
		// TODO Auto-generated method stub
		return null;
	}


	@Override
	public void forgotPassword() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void resetPassword(String newPassword,Object user) {
		// TODO Auto-generated method stub
	Dealer mydel = ( Dealer)user;
	dealdao.resetPassword(mydel,newPassword);
	}

	@Override
	public void editProfile(Object editProfile) {
		// TODO Auto-generated method stub
		Dealer editupdate = (Dealer) editProfile;
		dealdao.updateProfile(editupdate);
	}

	@Override
	public void removeCar(CarInventory removedCar) {
		// TODO Auto-generated method stub
		InventoryDAO daoI = new 	InventoryDAO();
		daoI.removeCarFromInventory(removedCar);
	}

	@Override
	public void removeCarPart(CarPartsInventory removeCarPart) {
		// TODO Auto-generated method stub
		InventoryDAO daoI = new 	InventoryDAO();
		daoI.removeCarPartFromInventory(removeCarPart);
	}

	@Override
	public void addCar(CarInventory addCar) {
		// TODO Auto-generated method stub
		InventoryDAO daoI = new 	InventoryDAO();
		daoI.addCarToInventory(addCar);
	}

	@Override
	public void addCarPart(CarPartsInventory addCarPart) {
		// TODO Auto-generated method stub
	InventoryDAO dao = new InventoryDAO()	;
	dao.addCarPartToInventory(addCarPart);
	}

	@Override
	public List<CarPartsInventory> getCarParts(Dealer d, Dealership ds) {
		// TODO Auto-generated method stub
		System.out.println("fetchin data");
		InventoryDAO dao = new InventoryDAO()	;
		return dao.getCarPartsInventory(d,ds);
	}

	@Override
	public List<CarInventory> getCar(Dealer dealer, Dealership dealership) {
		// TODO Auto-generated method stub
		System.out.println("car for "+dealer.getDid()+"fetchin data"+dealership.getDsid());
		InventoryDAO dao = new InventoryDAO()	;
		return dao.getCarInventory(dealer, dealership);
	}

	public void makeCarPayment(List<CarInventory> carscheckout, Carsale sale) {
		// TODO Auto-generated method stub
		 for(CarInventory c:carscheckout) {
				System.out.println("Customer for Car Payment update:"+c.getVid() +"<>"+ c.getPrice()+" "+c.getDsId());
		sale.setDsId(c.getDsId());
		sale.setVId(c.getVid());
		sale.setPrice(c.getPrice().toString());
		
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		 String date =sdf.format(new Date());
		Calendar cal = Calendar.getInstance();
		cal.setTime(new Date()); // Now use today date.
		cal.add(Calendar.DATE, 5); // Adding 5 days
		String output = sdf.format(cal.getTime());
		sale.setOrderDate(date);	
		sale.setStatus("0");
		sale.setDelivaryDate(output);
		System.out.println(sale.getCsid()+""+sale.getDsId()+""+sale.getVId());
		dealdao.payForCar(sale);
		InventoryDAO update = new InventoryDAO();
		update.removeCarFromInventory(c);
			}		
	}

	public void makeCarPartPayment(List<CarPartsInventory> carpartscheckout, int valueOfCapacity, Carpartssale partSale) {
		// TODO Auto-generated method stub
		for(CarPartsInventory cp:carpartscheckout) {
			System.out.println("Dealer in car page  Carparts:"+cp.getPid());
			partSale.setDsId(cp.getDsid());
			partSale.setPartId(cp.getPid());
			SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
			 String date =sdf.format(new Date());
			partSale.setDatePurchased(date);
			partSale.setStatus("0");
			partSale.setQuantity(cp.getQuantity());
			int quanttyCP=Integer.valueOf(partSale.getQuantity());
			int amt = Integer.valueOf(cp.getPrice()) * quanttyCP;
			partSale.setPrice(Integer.toString(amt));
			System.out.println(quanttyCP+ " "+"amount:"+amt);
			dealdao.payForCarPart(partSale);
			CarPartsInventory carupdate = new CarPartsInventory();
			carupdate.setPid(partSale.getPartId());
			if(quanttyCP<valueOfCapacity) {
				System.out.println("quanitty is less than capacity");
				InventoryDAO dao = new InventoryDAO();
				int updatedQuan = valueOfCapacity-quanttyCP;

				carupdate.setQuantity(Integer.toString(updatedQuan));
				dao.updateCarParts(carupdate);		}
			else if(Integer.parseInt(partSale.getQuantity())==valueOfCapacity) {
			//remove part from inventory	
				System.out.println("remove parts from inventory when quantity and capacity is equal");
				InventoryDAO dao = new InventoryDAO();
dao.removeCarPartFromInventory(carupdate);	
			}
			
		}
	}

}
